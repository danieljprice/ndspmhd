To compile SUPERSPHPLOT you will need the following on your system, both of whic
are freely available:
- The PGPLOT graphics subroutine library
- A Fortran 95 compiler

The basic steps for installation are:
1) make sure you have a Fortran 95 compiler (such as g95)
2) make sure you have the PGPLOT libraries installed
3) write a read_data subroutine so that SUPERSPHPLOT can read your data format
4) compile SUPERSPHPLOT with your read_data subroutine and link with PGPLOT

1) ---------------- Fortran 95 compilers ---------------------------

 By now, many Fortran 90/95 compilers exist. In terms of free ones, the Intel compiler has a
non-commercial version available for linux and the g95 compiler, downloadable from:

http://www.g95.org

successfully compiles SUPERSPHPLOT and if necessary the PGPLOT
libraries. 

2) ------------------- PGPLOT -----------------------------------------
The PGPLOT graphics subroutine library is freely downloadable from

http://www.astro.caltech.edu/~tjp/pgplot/

or by ftp from

ftp://ftp.astro.caltech.edu/pub/pgplot/pgplot5.2.tar.gz

however check to see if it is already installed on your system (if so, the libraries are
usually located in /usr/local/pgplot).

3) -------------- writing your data_read subroutine -------------------
If you are using a publically available code (e.g. GADGET), it is reasonably likely that I
have already written a read data subroutine which will read your dumps.
If not it is best to look at some of the other examples and change the 
necessary parts to suit your data files. Note that reading directly from
unformatted data files is *much* faster than reading from formatted (ascii)
output. Just to get started you can use the read_data_ascii.f90 which reads
from ascii files, but this will not enable the full rendering capabilities
until you specify the location of the density, h and particle mass in the
arrays (via the parameters ih, irho and ipmass in the set_labels subroutine
which is part of the read_data file). 

4) ------------------- Compiling and linking with PGPLOT --------------------------------
 In the Makefile, you will need to set the Fortran compiler and flags to your local version, e.g..

F90C = g95
F90FLAGS = -O

 Secondly the compiler must be able to link to the PGPLOT and X11 libraries on
your system. As a first attempt try using:

LDFLAGS = -lpgplot -lX11

If that works at a first attempt, take a moment to think several happy thoughts about your system
administrator. If these libraries are not found, you will need to enter the
library paths by hand. On most systems this is something like:

LDFLAGS = -L/usr/local/pgplot -lpgplot -L/usr/X11R6/lib -lX11

(assuming the PGPLOT libraries are in the /usr/local/pgplot directory and the
X11 libraries are in /usr/X11R6/lib). If this does not work, try using the
"locate" command to find the libraries on your system:

crap>locate libpgplot

crap>locate libX11

 If, having found the PGPLOT and X11
libraries, the program still won't compile, it is usually
because the PGPLOT on your system has been compiled with a different compiler to
the one you are using. A first attempt is to try using the g2c libraries

LDFLAGS = -L/usr/local/pgplot -lpgplot -L/usr/X11R6/lib -lX11 -lg2c

If the PNG drivers are incorporated into the PGPLOT installation, the -lpng libraries must also be added.
Failing that, ask your system administrator(!) or simply download your own copy of
the PGPLOT libraries and make sure it is compiled with the same compiler as you
are using to compile the SUPERSPHPLOT source code (e.g. g95).

 Secondly, you will need to modify the system-dependent routines for your
compiler. These are located in the file system_unix.f90 which works for most
unix-based compilers (including g95). A file system_unix_NAG
is included for the NAG f95 compiler. A version for Fortran 2003 compatible
compilers (such as g95) is also given (system_f2003.f90).

At present the only calls to these routines are made from supersphplot.f90 which
reads the run name(s) from the command line. A standardised format for performing this
task is included in the standards for the next release of Fortran (Fortran 2003),
however in the meantime the calls in the system module may require some adjustment depending on the
particular system you are compiling the code on. The program is still fully
functional without this call working, but it does make things convenient (in particular it means that
SUPERSPHPLOT can be invoked using wildcards (*,?) in filenames).

